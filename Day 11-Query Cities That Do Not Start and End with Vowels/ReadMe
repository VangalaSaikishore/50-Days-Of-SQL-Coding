===>Problem Statement:
Retrieve the list of unique CITY names from the STATION table where the CITY names:

Do not start with a vowel (i.e., 'A', 'E', 'I', 'O', 'U'), and
Do not end with a vowel (i.e., 'A', 'E', 'I', 'O', 'U').
Ensure the results do not contain duplicates. Handle potential null or empty CITY values gracefully.

The STATION table is structured as follows:

ID: Unique identifier for the station (NUMBER).
CITY: Name of the city (VARCHAR2(21)).
STATE: State abbreviation (VARCHAR2(2)).
LAT_N: Northern latitude (NUMBER).
LONG_W: Western longitude (NUMBER).

===>Solution

SELECT DISTINCT CITY
FROM STATION
WHERE UPPER(SUBSTR(CITY, 1, 1)) NOT IN ('A', 'E', 'I', 'O', 'U')
  AND UPPER(SUBSTR(CITY, LENGTH(CITY), 1)) NOT IN ('A', 'E', 'I', 'O', 'U');

===>Explanation
=>SUBSTR(CITY, 1, 1):
Extracts the first character of the CITY name.

=>SUBSTR(CITY, LENGTH(CITY), 1):
Extracts the last character of the CITY name.

=>UPPER():
Converts the extracted characters to uppercase for case-insensitive comparison.

=>NOT IN ('A', 'E', 'I', 'O', 'U'):
Ensures that the first and last characters are not vowels.

=>AND Clause:
Combines the conditions to filter CITY names that satisfy both criteria.

=>DISTINCT:
Removes duplicate CITY names from the result.

=>Graceful Handling:
The query safely handles null or empty values because SUBSTR and LENGTH operate only on valid non-null values.

===>Test Cases
=>Test Case 1: Standard Input
Input (CITY column values):
'Agra', 'Oslo', 'Berlin', 'Kyoto', 'Lima'

=>Expected Output:
Berlin  
Kyoto  

=>Test Case 2: Mixed Conditions
Input (CITY column values):
'Rome', 'DELHI', 'Oslo', 'Edison'

=>Expected Output:
DELHI  
