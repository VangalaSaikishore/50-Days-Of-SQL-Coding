===>Problem Statement: 
Given the STATION table with the following structure:

ID: Unique identifier for the station (NUMBER).
CITY: Name of the city (VARCHAR2(21)).
STATE: State abbreviation (VARCHAR2(2)).
LAT_N: Northern latitude (NUMBER).
LONG_W: Western longitude (NUMBER).

Write SQL queries to find the shortest and longest city names in the CITY column, along with their lengths (number of characters in the name).

If there are multiple cities with the same shortest or longest lengths, return the city that comes first alphabetically.

===>Solution
=> Query for the Shortest City Name:

SELECT CITY, LENGTH(CITY) AS LENGTH  
FROM STATION  
ORDER BY LENGTH(CITY) ASC, CITY ASC  
FETCH FIRST 1 ROW ONLY;  

=> Query for the Longest City Name:

SELECT CITY, LENGTH(CITY) AS LENGTH  
FROM STATION  
ORDER BY LENGTH(CITY) DESC, CITY ASC  
FETCH FIRST 1 ROW ONLY;  

===>Explanation:
=>Finding the Shortest City Name:

- LENGTH(CITY) ASC: Orders cities by name length in ascending order.
- CITY ASC: Ensures that for cities with the same length, the alphabetically first city is selected.
- FETCH FIRST 1 ROW ONLY: Limits the result to one row.

=>Finding the Longest City Name:

- LENGTH(CITY) DESC: Orders cities by name length in descending order.
- CITY ASC: Ensures that for cities with the same length, the alphabetically first city is selected.
- FETCH FIRST 1 ROW ONLY: Limits the result to one row.

===>Test cases:

=>Test Case 1
Input (CITY column values):

'Delhi'
'Agra'
'Mumbai'
'Pune'

=> Output:

Agra 4  
Mumbai 6  

=>Test Case 2
Input (CITY column values):

'AA'
'BB'
'CCCC'
'DDD'
Output:

=> Output:

AA 2  
CCCC 4  
